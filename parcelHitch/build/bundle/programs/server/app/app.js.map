{"version":3,"sources":["meteor://ðŸ’»app/lib/controllers/home_controller.js","meteor://ðŸ’»app/lib/methods.js","meteor://ðŸ’»app/lib/routes.js","meteor://ðŸ’»app/server/bootstrap.js","meteor://ðŸ’»app/server/methods.js"],"names":["HomeController","RouteController","extend","subscriptions","waitOn","data","onRun","next","onRerun","onBeforeAction","action","render","onAfterAction","onStop","Meteor","methods","isSimulation","Router","configure","layoutTemplate","loadingTemplate","notFoundTemplate","route","name","controller","where","startup"],"mappings":";;;;;;;;AAAAA,iBAAiBC,gBAAgBC,MAAhB,CAAuB;;AAEtC;AACA;AACA;AACA;;AAEAC;AAAe,6BAAW,CACzB;;AADD;AAAA,KAPsC;;AAUtC;AACA;AACA;AACA;;AAEAC;AAAQ,sBAAY,CACnB;;AADD;AAAA,KAfsC;;AAkBtC;AACA;AACA;AACA;AACA;;AAEAC;AAAM,oBAAY,CACjB;;AADD;AAAA,KAxBsC;;AA2BtC;;AAEAC;AAAO,qBAAY;AACjB,WAAKC,IAAL;AACD;;AAFD;AAAA,KA7BsC;AAgCtCC;AAAS,uBAAY;AACnB,WAAKD,IAAL;AACD;;AAFD;AAAA,KAhCsC;AAmCtCE;AAAgB,8BAAY;AAC1B,WAAKF,IAAL;AACD;;AAFD;AAAA,KAnCsC;;AAuCtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG;AAAQ,sBAAY;AAClB,WAAKC,MAAL;AACD;;AAFD;AAAA,KA/CsC;AAkDtCC;AAAe,6BAAY,CAC1B;;AADD;AAAA,KAlDsC;AAoDtCC;AAAQ,sBAAY,CACnB;;AADD;AAAA;AApDsC,CAAvB,CAAjB,sF;;;;;;;;;;;ACAA;AACA;AACA;;AAEAC,OAAOC,OAAP,CAAe;AACb;AAAmB,8BAAY;;AAE7B,UAAI,KAAKC,YAAT,EAAuB,CAItB;AAHD;AACA;AACA;;AAEA;AACD;;AARD;AAAA;AADa,CAAf,uF;;;;;;;;;;;ACJAC,OAAOC,SAAP,CAAiB;AACfC,kBAAgB,cADD;AAEfC,mBAAiB,SAFF;AAGfC,oBAAkB;AAHH,CAAjB;;AAOAJ,OAAOK,KAAP,CAAa,GAAb,EAAkB;AAChBC,QAAM,MADU;AAEhBC,cAAY,gBAFI;AAGhBC,SAAO;AAHS,CAAlB,uF;;;;;;;;;;;ACPAX,OAAOY,OAAP,CAAe,YAAY,CAC1B,CADD,2D;;;;;;;;;;;ACAA;AACA;AACA;;AAEAZ,OAAOC,OAAP,CAAe;AACb;AAAsB,iCAAY;AAChC;AACD;;AAFD;AAAA;AADa,CAAf,uF","file":"/app.js","sourcesContent":["HomeController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n","/*****************************************************************************/\n/*  Client and Server Methods */\n/*****************************************************************************/\n\nMeteor.methods({\n  'lib/method_name': function () {\n    \n    if (this.isSimulation) {\n    //   // do some client stuff while waiting for\n    //   // result from server.\n    //   return;\n    }\n    // server method logic\n  }\n});\n","Router.configure({\n  layoutTemplate: 'MasterLayout',\n  loadingTemplate: 'Loading',\n  notFoundTemplate: 'NotFound'\n});\n\n\nRouter.route('/', {\n  name: 'home',\n  controller: 'HomeController',\n  where: 'client'\n});","Meteor.startup(function () {\n});\n","/*****************************************************************************/\n/*  Server Methods */\n/*****************************************************************************/\n\nMeteor.methods({\n  'server/method_name': function () {\n    // server method logic\n  }\n});\n"]}